@use 'sass:map';
@use 'variables' as *;

// 布局 mixins
@mixin flex($direction: row, $justify: center, $align: center) {
  & {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
  }
}

@mixin grid($columns: 1, $gap: 1rem) {
  & {
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
  }
}

// Container mixin
@mixin container {
  & {
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: var(--spacing-4);
    padding-left: var(--spacing-4);
  }

  @media (min-width: #{var(--screen-sm)}) {
    & {
      max-width: var(--container-sm);
      padding-right: var(--spacing-6);
      padding-left: var(--spacing-6);
    }
  }

  @media (min-width: #{var(--screen-xl)}) {
    & {
      max-width: var(--container-xl);
      padding-right: var(--spacing-8);
      padding-left: var(--spacing-8);
    }
  }
}

// Breakpoint mixins
@mixin xs {
  @media (min-width: #{var(--screen-xs)}) {
    @content;
  }
}

@mixin sm {
  @media (min-width: #{var(--screen-sm)}) {
    @content;
  }
}

@mixin md {
  @media (min-width: #{var(--screen-md)}) {
    @content;
  }
}

@mixin lg {
  @media (min-width: #{var(--screen-lg)}) {
    @content;
  }
}

@mixin xl {
  @media (min-width: #{var(--screen-xl)}) {
    @content;
  }
}

@mixin xxl {
  @media (min-width: #{var(--screen-2xl)}) {
    @content;
  }
}

// 方向 mixins
@mixin portrait {
  @media (orientation: portrait) {
    @content;
  }
}

@mixin landscape {
  @media (orientation: landscape) {
    @content;
  }
}